---

- name: "Ensure dingo user group exist: {{ dingo_group }}"
  group: name={{ dingo_group }} state=present

- name: "Ensure dingo user exist {{ dingo_user }}"
  user: name={{ dingo_user }} group={{ dingo_group }}

- name: "Remove dingo home/log/data directories if exist"
  file: path="{{ item }}" state=absent
  with_items: 
    - "{{ dingo_home }}"
    - "{{ dingo_log_path }}"
    - "{{ dingo_data_path }}"


- name: "Ensure installer cache Directory {{ installer_cache_path }}"
  file: path={{ installer_cache_path }} state=directory

- name: "Create dingo directories"
  file: path="{{item}}" state=directory owner={{dingo_user}} group={{dingo_group}}
  with_items:
    - "{{ dingo_home }}"
    - "{{ dingo_log_path }}"
    - "{{ dingo_data_path }}"
    - "{{ dingo_executor_server_db_path }}"
    - "{{ dingo_executor_raft_log_path }}"
    - "{{ dingo_executor_raft_db_path }}"

- name: "Copy dingo zip archive to remote host"
  copy: src={{ item }}  dest={{ installer_cache_path }}
  with_items:
    - "{{ cfg_dingodb_local_path }}"

- name: "Unarchive {{ cfg_dingodb_local_path }} to {{ dingo_home }}"
  unarchive:
    src: "{{ installer_cache_path }}/{{ cfg_dingodb_local_path|basename}}"
    dest: "{{ dingo_home }}"
    mode: "go-w"
    remote_src: yes
    list_files: yes
    owner: "{{ dingo_user }}"
    group: "{{ dingo_group }}"
  register: archive_contents

- name: Change owner of all files in directory
  file:
    path: "{{ dingo_home }}"
    owner: "{{ dingo_user }}"
    group: "{{ dingo_group }}"
    recurse: yes

- name: "Move contents of temp directory to {{ dingo_home }}"
  become: true
  become_user: "{{ dingo_user }}"
  shell: "mv {{ dingo_home }}/dingo/* {{ dingo_home }}/"

- name: "Delete temporary tarball file: {{ installer_cache_path }}/{{ cfg_dingodb_local_path|basename}}"
  file: path={{ installer_cache_path }}/{{ cfg_dingodb_local_path|basename }} state=absent
  when: delete_cache_after_install