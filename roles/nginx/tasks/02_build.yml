---

- name: "Try stopping nginx service via systemd"
  systemd:  name=nginx state=stopped
  when: ansible_service_mgr == "systemd"
  failed_when: false

- name: "Try stopping nginx service"
  service: name=nginx state=stopped
  when: (ansible_service_mgr == "upstart" or ansible_service_mgr == "sysvinit")
  failed_when: false

- name: "Ensure nginx directories"
  file: path={{ item }} state=directory owner={{ nginx_user }} group={{ nginx_group }}
  with_items:
  - "{{ nginx_home }}"
  - "{{ nginx_data_path }}"
  - "{{ nginx_log_path }}"
  - "{{ nginx_run_path }}"

- name: "Ensure installer cache directory {{ installer_cache_path }}"
  file: path={{ installer_cache_path }} state=directory

- name: "Extract nginx tarball"
  unarchive: src={{ nginx_local_file }}
        dest={{ nginx_home }}
        remote_src=yes
  when: ansible_architecture == 'x86_64'

- name: "Extract nginx tarball"
  unarchive: src={{ nginx_arm_local_file }}
        dest={{ nginx_home }}
        remote_src=yes
  when: ansible_architecture == 'aarch64'

- name: "Ensure monitor_web directories"
  file: path={{ item }} state=directory owner={{ nginx_user }} group={{ nginx_group }}
  with_items:
    - "{{ nginx_data_path }}/monitor_web"

- name: "Unarchive {{ monitor_web_local_file }} to {{ nginx_data_path }}/monitor_web"
  unarchive:
    src: "{{ monitor_web_local_file }}"
    dest: "{{ nginx_data_path }}/monitor_web"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    remote_src: yes
    extra_opts: ['--strip-components=1']

- name: "Ensure nginx directories"
  file: path={{ item }} state=directory owner={{ nginx_user }} group={{ nginx_group }}
  with_items:
  - "{{ nginx_conf_dir }}/sites-available"
  - "{{ nginx_conf_dir }}/sites-enabled"

- name: "Set ownership of {{ nginx_home }} to {{ nginx_user }}"
  file: path={{ nginx_home }} owner={{ nginx_user }} group={{ nginx_group }} recurse=yes

