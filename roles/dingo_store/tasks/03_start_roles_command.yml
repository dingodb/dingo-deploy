---

# stop all the coordinator and store
- name: "Stop and Del db Coordinator on all host"
  become: true
  become_user: "{{ dingo_user }}"
  shell: "/bin/bash ./scripts/start-coordinator.sh clean"
  args:
    chdir: "{{ dingo_store_home }}"

# stop all the coordinator and store
- name: "Stop and Del db Store on all host"
  become: true
  become_user: "{{ dingo_user }}"
  shell: "/bin/bash ./scripts/start-store.sh clean"
  args:
    chdir: "{{ dingo_store_home }}"

# stop all the index
- name: "Stop and Del db Index on all host"
  become: true
  become_user: "{{ dingo_user }}"
  shell: "/bin/bash ./scripts/start-index.sh clean"
  args:
    chdir: "{{ dingo_store_home }}"

# start coordinator
- name: "Deploy and Start Coordinator using Script"
  become: true
  become_user: "{{ dingo_user }}"
  shell: "/bin/bash ./scripts/start-coordinator.sh cleanstart" 
  args:
    chdir: "{{ dingo_store_home }}"
  when: is_dingo_store_coordinator

- name: "Sleep wait coordinator start"
  shell: "sleep 20"

# start store
- name: "Deploy and Start Store using Shell Script"
  become: true
  become_user: "{{ dingo_user }}"
  shell: "/bin/bash ./scripts/start-store.sh cleanstart" 
  args:
    chdir: "{{ dingo_store_home }}"
  when: is_dingo_store_store

# start index
- name: "Deploy and Start index using Shell Script"
  become: true
  become_user: "{{ dingo_user }}"
  shell: "/bin/bash ./scripts/start-index.sh cleanstart"
  args:
    chdir: "{{ dingo_store_home }}"
  when: is_dingo_store_index

- name: "Sleep wait store start"
  shell: "sleep 20"

# start init mysql
- name: "init mysql using Shell Script"
  become: true
  become_user: "{{ dingo_user }}"
  shell: "/bin/bash ./scripts/mysql_init.sh" 
  args:
    chdir: "{{ dingo_store_home }}"
  when: 
    - is_dingo_store_coordinator
    - inventory_hostname == ansible_play_batch[0]

- name: "install license"
  register: license_id
  shell: "/bin/bash ./scripts/generate_id.sh"
  args:
    chdir: "{{ dingo_store_home }}"
  when:
    - is_license_support
    - inventory_hostname == groups['store'][0]

# 将上一步/bin/bash ./scripts/generate_id.sh执行的结果打印出来
- name: "Print license_id"
  debug:
    msg: "license ID {{ license_id.stdout_lines|join(',')|regex_search('value: \"(.*?)\"') }}"
  when:
    - is_license_support
    - inventory_hostname == groups['store'][0]


