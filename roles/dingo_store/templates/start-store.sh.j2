#!/bin/bash

mydir="${BASH_SOURCE%/*}"
if [[ ! -d "$mydir" ]]; then mydir="$PWD"; fi
. $mydir/shflags


DEFINE_string role 'store' 'server role'
DEFINE_boolean clean_db 1 'clean db'
DEFINE_boolean clean_raft 1 'clean raft'
DEFINE_boolean clean_log 0 'clean log'
DEFINE_boolean replace_conf 0 'replace conf'

# parse the command-line
FLAGS "$@" || exit 1
eval set -- "${FLAGS_ARGV}"


BASE_DIR=$(dirname $(cd $(dirname $0); pwd))
DIST_DIR=$BASE_DIR/dist

SERVER_HOST={{ inventory_hostname | default('127.0.0.1') }}
RAFT_HOST={{ inventory_hostname | default('127.0.0.1') }}
COOR_SRV_PEERS={{ dingo_store_store_exchange_connection_list }}
STORE_NUM={{ store_num | int }}
RAFT_START_PORT={{ dingo_store_raft_port | default(20101) }}
SERVER_START_PORT={{ dingo_store_exchange_port | default(20001) }}
DISK_LIST_STR="{{ hostvars[inventory_hostname]['disk']  | default('${DIST_DIR}') }}"
eval DISK_LIST=($DISK_LIST_STR)
TMP_COORDINATOR_SERVICES=$BASE_DIR/build/bin/coor_list


if [ ! -d "$DIST_DIR" ]; then
  mkdir "$DIST_DIR"
fi

source $mydir/deploy_func.sh

deploy() {
  echo "# dingo-store coordinators" > ${TMP_COORDINATOR_SERVICES}
  echo $COOR_SRV_PEERS | tr ',' '\n' >> ${TMP_COORDINATOR_SERVICES}

  for i in $(seq 1 $STORE_NUM)
  do
    START_ID={{ groups['coordinator'].index(inventory_hostname) * 100 }}
    INSTANCE_START_ID=`expr 1000 + $i + $START_ID`
    N_SERVER_START_PORT=`expr $SERVER_START_PORT + $i - 1`
    N_RAFT_START_PORT=`expr $RAFT_START_PORT + $i - 1`
    # program_dir=$BASE_DIR/dist/${FLAGS_role}${i}
    program_dir=${DISK_LIST[i - 1]}/${FLAGS_role}${i}
    if [ ! -d "${DISK_LIST[i - 1]}" ]; then
      mkdir -p "${DISK_LIST[i - 1]}"
    fi

    deploy_store ${FLAGS_role} $BASE_DIR $program_dir  $N_SERVER_START_PORT $N_RAFT_START_PORT $INSTANCE_START_ID ${COOR_RAFT_PEERS:-fail} ${TMP_COORDINATOR_SERVICES}
  done
}


start() {
  #FLAGS_role=${FLAGS_role}
  for i in $(seq 1 $STORE_NUM)
  do
    # program_dir=$BASE_DIR/dist/${FLAGS_role}${i}
    program_dir=${DISK_LIST[i - 1]}/${FLAGS_role}${i}
    # clean log
    rm -f ${program_dir}/log/*
    start_program ${FLAGS_role} ${program_dir}
  done    
}




clean() 
{
  for i in $(seq 1 $STORE_NUM)
  do
    program_dir=${DISK_LIST[i - 1]}/${FLAGS_role}${i}
    rm -rf ${program_dir}
    sleep 1
    echo "rm -rf ${program_dir}  files"
  done
}




stop() 
{
   k_pid=$(ps -fu {{ dingo_user }} | grep "dingodb_server --role store"   |grep -v grep|awk '{printf $2 "\n"}')
   for i in $k_pid
   do
   echo $i 
   $(kill -9 $i)
   done
}

usage()
{
        echo "Usage: $0 [clean|deploy|start|stop|restart|cleanstart]"
}

if [ $# -lt 1 ];then
        usage
        exit
fi

if [ "$1" = "deploy" ];then
        deploy
	
elif [ "$1" = "clean" ];then
        stop
	      clean

elif [ "$1" = "start" ];then
        start

elif [ "$1" = "stop" ];then
        stop

elif [ "$1" = "restart" ];then
        stop
        start

elif [ "$1" = "cleanstart" ];then
        stop
        clean
        deploy
        start

else
        usage
fi
